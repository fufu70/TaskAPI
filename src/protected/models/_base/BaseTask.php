<?php

/**
 * This is the model base class for the table "{{task}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Task".
 *
 * Columns in table "{{task}}" available as properties of the model,
 * followed by relations of table "{{task}}" available as properties of the model.
 *
 * @property integer $task_id
 * @property string $task_hash_id
 * @property string $install_command
 * @property string $start_command
 * @property string $end_command
 * @property string $created_at
 * @property string $updated_at
 *
 * @property NodeHasTask[] $nodeHasTasks
 */
abstract class BaseTask extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{task}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Task|Tasks', $n);
	}

	public static function representingColumn() {
		return 'task_hash_id';
	}

	public function rules() {
		return array(
			array('task_hash_id', 'required'),
			array('task_hash_id', 'length', 'max'=>256),
			array('install_command, start_command, end_command', 'length', 'max'=>2048),
			array('created_at, updated_at', 'safe'),
			array('install_command, start_command, end_command, created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('task_id, task_hash_id, install_command, start_command, end_command, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'nodeHasTasks' => array(self::HAS_MANY, 'NodeHasTask', 'task_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'task_id' => Yii::t('app', 'Task'),
			'task_hash_id' => Yii::t('app', 'Task Hash'),
			'install_command' => Yii::t('app', 'Install Command'),
			'start_command' => Yii::t('app', 'Start Command'),
			'end_command' => Yii::t('app', 'End Command'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'nodeHasTasks' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('task_id', $this->task_id);
		$criteria->compare('task_hash_id', $this->task_hash_id, true);
		$criteria->compare('install_command', $this->install_command, true);
		$criteria->compare('start_command', $this->start_command, true);
		$criteria->compare('end_command', $this->end_command, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}